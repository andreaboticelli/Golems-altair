{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/ubuntu/Golems-altair/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useState}from'react';import styled from'styled-components';import{createClient}from'@supabase/supabase-js';// Initialize Supabase client\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const supabaseUrl='https://your-supabase-url.supabase.co';const supabaseKey='your-supabase-anon-key';const supabase=createClient(supabaseUrl,supabaseKey);const AuthContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 500px;\\n  margin: 0 auto;\\n  padding: 2rem;\\n\"])));const InputGroup=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 2rem;\\n\"])));const InputLabel=styled.label(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin-bottom: 0.5rem;\\n  font-size: 1.2rem;\\n\"])));const InputField=styled.input(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background-color: transparent;\\n  border: none;\\n  border-bottom: 1px solid rgba(179, 166, 125, 0.5);\\n  padding: 0.5rem 0;\\n  color: rgba(179, 166, 125, 1);\\n  font-size: 1.1rem;\\n  \\n  &:focus {\\n    outline: none;\\n    border-bottom: 1px solid rgba(179, 166, 125, 1);\\n  }\\n\"])));const AuthButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 1rem;\\n  margin-top: 2rem;\\n  text-transform: uppercase;\\n  letter-spacing: 0.1em;\\n  font-size: 1.2rem;\\n  transition: all 0.3s ease;\\n\"])));const ErrorMessage=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  color: #e04e2f;\\n  margin-top: 1rem;\\n  padding: 0.5rem;\\n  border: 1px solid rgba(224, 78, 47, 0.3);\\n  background-color: rgba(224, 78, 47, 0.1);\\n\"])));// Context for authentication state\nexport const AuthContext=/*#__PURE__*/React.createContext({user:null,signIn:async()=>({}),signUp:async()=>({}),signOut:async()=>({}),loading:false});// Auth Provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);React.useEffect(()=>{// Check for active session on mount\nconst fetchSession=async()=>{const{data,error}=await supabase.auth.getSession();if(data&&data.session){var _data$session$user;setUser((_data$session$user=data.session.user)!==null&&_data$session$user!==void 0?_data$session$user:null);}else{setUser(null);}setLoading(false);};fetchSession();// Listen for auth changes\nconst{data:authListener}=supabase.auth.onAuthStateChange(async(event,session)=>{var _session$user;setUser((_session$user=session===null||session===void 0?void 0:session.user)!==null&&_session$user!==void 0?_session$user:null);setLoading(false);});return()=>{authListener===null||authListener===void 0?void 0:authListener.subscription.unsubscribe();};},[]);const signUp=async(email,password)=>{try{setLoading(true);const{data,error}=await supabase.auth.signUp({email,password});if(error)throw error;return{data,error:null};}catch(error){return{data:null,error};}finally{setLoading(false);}};const signIn=async(email,password)=>{try{setLoading(true);const{data,error}=await supabase.auth.signInWithPassword({email,password});if(error)throw error;return{data,error:null};}catch(error){return{data:null,error};}finally{setLoading(false);}};const signOut=async()=>{try{setLoading(true);const{error}=await supabase.auth.signOut();if(error)throw error;return{error:null};}catch(error){return{error};}finally{setLoading(false);}};const value={user,signIn,signUp,signOut,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook for using auth\nexport const useAuth=()=>{const context=React.useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};// Login component\nexport const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState(null);const{signIn}=useAuth();const handleLogin=async e=>{e.preventDefault();setError(null);const{data,error}=await signIn(email,password);if(error){setError(error.message);}};return/*#__PURE__*/_jsxs(AuthContainer,{className:\"arcane-container arcane-container-bottom\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl text-center mb-8\",children:\"LOG IN\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Email\"}),/*#__PURE__*/_jsx(InputField,{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Password\"}),/*#__PURE__*/_jsx(InputField,{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),error&&/*#__PURE__*/_jsx(ErrorMessage,{children:error}),/*#__PURE__*/_jsx(AuthButton,{type:\"submit\",className:\"btn-arcane\",children:\"LOG IN\"})]})]});};export default{AuthProvider,useAuth,Login};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}